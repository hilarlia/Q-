// <auto-generated>
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.DeutschJosza\",\"Name\":\"QB4Run\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs\",\"Position\":{\"Item1\":8,\"Item2\":1},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.DeutschJosza\",\"Name\":\"QB4Run\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs\",\"Position\":{\"Item1\":8,\"Item2\":1},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.DeutschJosza\",\"Name\":\"Det\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs\",\"Position\":{\"Item1\":33,\"Item2\":1},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"det\"]},\"Type\":{\"Case\":\"Result\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":16},\"Item2\":{\"Line\":1,\"Column\":19}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":29},\"Item2\":{\"Line\":1,\"Column\":30}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Result\"},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.DeutschJosza\",\"Name\":\"Det\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs\",\"Position\":{\"Item1\":33,\"Item2\":1},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.DeutschJosza\",\"Name\":\"Oracle\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs\",\"Position\":{\"Item1\":43,\"Item2\":1},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"number\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":19},\"Item2\":{\"Line\":1,\"Column\":25}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q0\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":32},\"Item2\":{\"Line\":1,\"Column\":34}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q1\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":43},\"Item2\":{\"Line\":1,\"Column\":45}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.DeutschJosza\",\"Name\":\"Oracle\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs\",\"Position\":{\"Item1\":43,\"Item2\":1},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
#line hidden
namespace Quantum.DeutschJosza
{
    [SourceLocation("C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs", OperationFunctor.Body, 9, 34)]
    public partial class QB4Run : Operation<QVoid, QVoid>, ICallable
    {
        public QB4Run(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "QB4Run";
        String ICallable.FullName => "Quantum.DeutschJosza.QB4Run";
        protected ICallable<Int64, String> MicrosoftQuantumConvertIntAsString
        {
            get;
            set;
        }

        protected Allocate Allocate
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicH
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> MicrosoftQuantumIntrinsicM
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> MicrosoftQuantumIntrinsicMessage
        {
            get;
            set;
        }

        protected Release Release
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> MicrosoftQuantumIntrinsicReset
        {
            get;
            set;
        }

        protected ICallable<Int64, Int64> MicrosoftQuantumMathRandomInt
        {
            get;
            set;
        }

        protected ICallable<(Result,Qubit), QVoid> Det
        {
            get;
            set;
        }

        protected ICallable<(Int64,Qubit,Qubit), QVoid> Oracle
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> Body => (__in__) =>
        {
#line 12 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
            var val = 0L;
#line 13 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
            var num = MicrosoftQuantumMathRandomInt.Apply(4L);
#line hidden
            {
#line 14 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                var qubits = Allocate.Apply(2L);
#line hidden
                System.Runtime.ExceptionServices.ExceptionDispatchInfo __arg1__ = null;
                try
                {
#line 17 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                    Det.Apply((Result.Zero, qubits[0L]));
#line 18 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                    Det.Apply((Result.One, qubits[1L]));
#line 19 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                    MicrosoftQuantumIntrinsicH.Apply(qubits[0L]);
#line 20 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                    MicrosoftQuantumIntrinsicH.Apply(qubits[1L]);
#line 21 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                    Oracle.Apply((num, qubits[0L], qubits[1L]));
#line 22 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                    MicrosoftQuantumIntrinsicH.Apply(qubits[0L]);
#line 23 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                    var res = MicrosoftQuantumIntrinsicM.Apply(qubits[0L]);
#line 24 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                    if ((res == Result.Zero))
                    {
#line 24 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                        val = 0L;
                    }
                    else
                    {
#line 25 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                        val = 1L;
                    }

#line 26 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                    MicrosoftQuantumIntrinsicReset.Apply(qubits[0L]);
#line 27 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                    MicrosoftQuantumIntrinsicReset.Apply(qubits[1L]);
#line 28 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                    MicrosoftQuantumIntrinsicMessage.Apply(("Result of Measurement:" + MicrosoftQuantumConvertIntAsString.Apply(val)));
#line 29 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                    if (((num == 0L) || (num == 1L)))
                    {
#line 29 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                        MicrosoftQuantumIntrinsicMessage.Apply("Constant");
                    }
                    else
                    {
#line 30 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                        MicrosoftQuantumIntrinsicMessage.Apply("Balanced");
                    }
                }
#line hidden
                catch (Exception __arg2__)
                {
                    __arg1__ = System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(__arg2__);
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__ != null)
                    {
                        __arg1__.Throw();
                    }

#line hidden
                    Release.Apply(qubits);
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumConvertIntAsString = this.Factory.Get<ICallable<Int64, String>>(typeof(Microsoft.Quantum.Convert.IntAsString));
            this.Allocate = this.Factory.Get<Allocate>(typeof(Microsoft.Quantum.Intrinsic.Allocate));
            this.MicrosoftQuantumIntrinsicH = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.H));
            this.MicrosoftQuantumIntrinsicM = this.Factory.Get<ICallable<Qubit, Result>>(typeof(Microsoft.Quantum.Intrinsic.M));
            this.MicrosoftQuantumIntrinsicMessage = this.Factory.Get<ICallable<String, QVoid>>(typeof(Microsoft.Quantum.Intrinsic.Message));
            this.Release = this.Factory.Get<Release>(typeof(Microsoft.Quantum.Intrinsic.Release));
            this.MicrosoftQuantumIntrinsicReset = this.Factory.Get<ICallable<Qubit, QVoid>>(typeof(Microsoft.Quantum.Intrinsic.Reset));
            this.MicrosoftQuantumMathRandomInt = this.Factory.Get<ICallable<Int64, Int64>>(typeof(Microsoft.Quantum.Math.RandomInt));
            this.Det = this.Factory.Get<ICallable<(Result,Qubit), QVoid>>(typeof(Det));
            this.Oracle = this.Factory.Get<ICallable<(Int64,Qubit,Qubit), QVoid>>(typeof(Oracle));
        }

        public override IApplyData __dataIn(QVoid data) => data;
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<QB4Run, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs", OperationFunctor.Body, 34, 44)]
    public partial class Det : Operation<(Result,Qubit), QVoid>, ICallable
    {
        public Det(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Result,Qubit)>, IApplyData
        {
            public In((Result,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item2;
                }
            }
        }

        String ICallable.Name => "Det";
        String ICallable.FullName => "Quantum.DeutschJosza.Det";
        protected ICallable<Qubit, Result> MicrosoftQuantumIntrinsicM
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicX
        {
            get;
            set;
        }

        public override Func<(Result,Qubit), QVoid> Body => (__in__) =>
        {
            var (det,q) = __in__;
#line 37 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
            var measured = MicrosoftQuantumIntrinsicM.Apply(q);
#line 38 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
            if ((det != measured))
            {
#line 40 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                MicrosoftQuantumIntrinsicX.Apply(q);
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumIntrinsicM = this.Factory.Get<ICallable<Qubit, Result>>(typeof(Microsoft.Quantum.Intrinsic.M));
            this.MicrosoftQuantumIntrinsicX = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.X));
        }

        public override IApplyData __dataIn((Result,Qubit) data) => new In(data);
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Result det, Qubit q)
        {
            return __m__.Run<Det, (Result,Qubit), QVoid>((det, q));
        }
    }

    [SourceLocation("C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs", OperationFunctor.Body, 44, -1)]
    public partial class Oracle : Operation<(Int64,Qubit,Qubit), QVoid>, ICallable
    {
        public Oracle(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Qubit,Qubit)>, IApplyData
        {
            public In((Int64,Qubit,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item2;
                    yield return Data.Item3;
                }
            }
        }

        String ICallable.Name => "Oracle";
        String ICallable.FullName => "Quantum.DeutschJosza.Oracle";
        protected IUnitary<(Qubit,Qubit)> MicrosoftQuantumIntrinsicCNOT
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicX
        {
            get;
            set;
        }

        public override Func<(Int64,Qubit,Qubit), QVoid> Body => (__in__) =>
        {
            var (number,q0,q1) = __in__;
#line 47 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
            if ((number == 1L))
            {
#line 49 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                MicrosoftQuantumIntrinsicX.Apply(q1);
            }
            else if ((number == 2L))
            {
#line 53 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                MicrosoftQuantumIntrinsicCNOT.Apply((q0, q1));
            }
            else if ((number == 3L))
            {
#line 57 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                MicrosoftQuantumIntrinsicCNOT.Apply((q0, q1));
#line 58 "C:/Users/ufkug/source/repos/DeutschJosza/DeutschJosza/Operations.qs"
                MicrosoftQuantumIntrinsicX.Apply(q1);
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumIntrinsicCNOT = this.Factory.Get<IUnitary<(Qubit,Qubit)>>(typeof(Microsoft.Quantum.Intrinsic.CNOT));
            this.MicrosoftQuantumIntrinsicX = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.X));
        }

        public override IApplyData __dataIn((Int64,Qubit,Qubit) data) => new In(data);
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Int64 number, Qubit q0, Qubit q1)
        {
            return __m__.Run<Oracle, (Int64,Qubit,Qubit), QVoid>((number, q0, q1));
        }
    }
}